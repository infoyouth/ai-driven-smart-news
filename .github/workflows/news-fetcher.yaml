name: AI Driven News 🚀

on:
  workflow_dispatch: # Allow manual triggering of the workflow
  schedule: # Run the workflow on a schedule
    - cron: "0 3 * * *" # Runs daily at 3 AM UTC

jobs:
  run_main_script:
    runs-on: ubuntu-24.04
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }} # Set the API key from GitHub Secrets
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }} # Set the NewsAPI key from GitHub Secrets
    steps:
      - name: 🚗 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set Up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 🗄️ Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: 📦 Install Poetry
        run: |
          echo "🔄 Installing Poetry..."
          python -m pip install --upgrade pip
          pip install poetry

      - name: 📦 Install Dependencies and Project
        run: |
          echo "🔄 Installing dependencies and project..."
          poetry install

      - name: 🧪 Debug Python Environment
        run: |
          echo "Python executable: $(which python)"
          echo "Python version: $(python --version)"
          echo "Installed packages:"
          python -m pip list

      - name: 🧪 Set PYTHONPATH
        run: |
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          echo "PYTHONPATH set to: $PYTHONPATH"

      - name: 📝 Run Main Script
        run: |
          set -e
          echo "🚀 Running main.py within Poetry environment..."
          #poetry run python main.py
          #echo "💰 [Walmart & Amazon Exploring Stablecoins](https://www.wsj.com/finance/banking/walmart-amazon-stablecoin-07de2fdd)" > output.txt

      - name: ✅ Validate Output Files
        id: validate-output
        run: |
          if [ ! -f output.txt ] || [ ! -s output.txt ]; then
            echo "file_exists=false" >> $GITHUB_ENV
            exit 1
          else
            echo "file_exists=true" >> $GITHUB_ENV
          fi

      - name: 🧪 Read Output File Content
        id: read-output
        shell: bash
        run: |
          discord=$(cat ./output.txt)
          echo "$discord"
          echo "content=$discord" >> $GITHUB_OUTPUT
          #echo "content<<END_OF_FILE" >> $GITHUB_OUTPUT
          #cat ./output.txt >> $GITHUB_OUTPUT
          #echo "END_OF_FILE" >> $GITHUB_OUTPUT

      - name: 📢 Notify Discord
        if: ${{ env.file_exists == 'true' }}
        uses: cabrera-evil/discord-notify-action@v1.0.1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: "AI-Driven Breaking 🚀"
          description: ${{ steps.read-output.outputs.content }}
          include_image: 'true'
          username: 'Youth Innovations'
          custom_image_url: 'https://raw.githubusercontent.com/infoyouth/infoyouth.github.io/main/configs/image/favicon-48x48.png'

      - name: 🌍 Beautify Logs
        run: echo "🎉 Workflow completed successfully! 🎉"
